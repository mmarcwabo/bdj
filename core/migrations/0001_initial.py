# Generated by Django 5.2.1 on 2025-05-23 01:59

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dossier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('numero_rg', models.CharField(help_text='Numéro de Répertoire Général', max_length=50, unique=True)),
                ('numero_parquet', models.CharField(blank=True, help_text='Numéro du parquet pour les affaires pénales', max_length=50)),
                ('numero_instruction', models.CharField(blank=True, help_text="Numéro d'instruction", max_length=50)),
                ('intitule', models.CharField(max_length=300)),
                ('objet_litige', models.TextField()),
                ('etat', models.CharField(choices=[('ENREGISTRE', 'Enregistré'), ('INSTRUCTION', 'En Instruction'), ('MISE_EN_ETAT', 'Mise en État'), ('PRET_PLAIDOIRIE', 'Prêt pour Plaidoirie'), ('EN_DELIBERE', 'En Délibéré'), ('JUGE', 'Jugé'), ('CLOS', 'Clos'), ('RADIE', 'Radié'), ('DESISTEMENT', 'Désistement'), ('APPEL', 'Appelé'), ('POURVOI', 'Pourvoi en Cassation'), ('CLASSE_SANS_SUITE', 'Classé sans Suite'), ('RENVOI_CORRECTIONNEL', 'Renvoi Correctionnel'), ('RENVOI_ASSISES', 'Renvoi aux Assises')], default='ENREGISTRE', max_length=25)),
                ('urgence', models.CharField(choices=[('NORMALE', 'Normale'), ('URGENTE', 'Urgente'), ('TRES_URGENTE', 'Très Urgente'), ('REFERE', 'Référé'), ('FLAGRANT_DELIT', 'Flagrant Délit')], default='NORMALE', max_length=15)),
                ('date_enregistrement', models.DateField(default=django.utils.timezone.now)),
                ('date_cloture', models.DateField(blank=True, null=True)),
                ('duree_estimee', models.IntegerField(blank=True, help_text='Durée estimée en jours', null=True)),
                ('chambre', models.CharField(blank=True, help_text='Chambre ou section', max_length=50)),
                ('est_confidentiel', models.BooleanField(default=False, help_text='Dossier sous secret')),
            ],
            options={
                'verbose_name': 'Dossier',
                'verbose_name_plural': 'Dossiers',
            },
        ),
        migrations.CreateModel(
            name='NatureAffaire',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('matiere', models.CharField(choices=[('CIVILE', 'Matière Civile'), ('PENALE', 'Matière Pénale'), ('COMMERCIALE', 'Matière Commerciale'), ('ADMINISTRATIVE', 'Matière Administrative'), ('SOCIALE', 'Matière Sociale')], max_length=50)),
            ],
            options={
                'verbose_name': "Nature d'Affaire",
                'verbose_name_plural': "Natures d'Affaires",
            },
        ),
        migrations.CreateModel(
            name='Parquet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('nom', models.CharField(max_length=200)),
                ('type_parquet', models.CharField(choices=[('PARQUET_GENERAL', 'Parquet Général'), ('PARQUET_TJ', 'Parquet du Tribunal Judiciaire'), ('PARQUET_SPECIALISE', 'Parquet Spécialisé'), ('PARQUET_ANTITERRORISTE', 'Parquet National Antiterroriste'), ('PARQUET_FINANCIER', 'Parquet National Financier'), ('PARQUET_MINEURS', 'Parquet des Mineurs')], max_length=25)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('competence_territoriale', models.TextField(help_text='Ressort territorial')),
                ('competence_materielle', models.TextField(blank=True, help_text='Compétences spécialisées')),
            ],
            options={
                'verbose_name': 'Parquet',
                'verbose_name_plural': 'Parquets',
            },
        ),
        migrations.CreateModel(
            name='Partie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('prenom', models.CharField(max_length=100)),
                ('nom', models.CharField(max_length=100)),
                ('nom_usage', models.CharField(blank=True, max_length=100)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('lieu_naissance', models.CharField(blank=True, max_length=100)),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('adresse', models.TextField()),
                ('numero_identification', models.CharField(blank=True, help_text='NIR, SIREN, SIRET, etc.', max_length=50)),
                ('est_personne_morale', models.BooleanField(default=False)),
                ('raison_sociale', models.CharField(blank=True, max_length=200)),
                ('forme_juridique', models.CharField(blank=True, help_text='SARL, SAS, Association, etc.', max_length=100)),
            ],
            options={
                'verbose_name': 'Partie',
                'verbose_name_plural': 'Parties',
            },
        ),
        migrations.CreateModel(
            name='Tribunal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('nom', models.CharField(max_length=200)),
                ('type_tribunal', models.CharField(choices=[('COUR_CASSATION', 'Cour de Cassation'), ('COUR_APPEL', "Cour d'Appel"), ('TRIBUNAL_JUDICIAIRE', 'Tribunal Judiciaire'), ('TRIBUNAL_PROXIMITE', 'Tribunal de Proximité'), ('TRIBUNAL_COMMERCE', 'Tribunal de Commerce'), ('CONSEIL_PRUDHOMMES', "Conseil de Prud'hommes"), ('TRIBUNAL_ADMINISTRATIF', 'Tribunal Administratif'), ('TRIBUNAL_CORRECTIONNEL', 'Tribunal Correctionnel'), ('COUR_ASSISES', "Cour d'Assises"), ('TRIBUNAL_POLICE', 'Tribunal de Police')], max_length=30)),
                ('juridiction', models.CharField(max_length=100)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
            ],
            options={
                'verbose_name': 'Tribunal',
                'verbose_name_plural': 'Tribunaux',
            },
        ),
        migrations.CreateModel(
            name='Avocat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('numero_barreau', models.CharField(max_length=50, unique=True)),
                ('cabinet', models.CharField(blank=True, max_length=200)),
                ('telephone', models.CharField(max_length=20)),
                ('adresse', models.TextField()),
                ('specialisation', models.CharField(blank=True, max_length=100)),
                ('date_serment', models.DateField()),
                ('barreau', models.CharField(help_text='Barreau de rattachement', max_length=100)),
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Avocat',
                'verbose_name_plural': 'Avocats',
            },
        ),
        migrations.CreateModel(
            name='Decision',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('type_decision', models.CharField(choices=[('JUGEMENT', 'Jugement'), ('ARRET', 'Arrêt'), ('ORDONNANCE', 'Ordonnance'), ('SENTENCE', 'Sentence Arbitrale')], max_length=15)),
                ('numero_decision', models.CharField(max_length=50, unique=True)),
                ('date_decision', models.DateField()),
                ('date_lecture', models.DateField(blank=True, null=True)),
                ('sens_decision', models.CharField(choices=[('ACCUEIL', 'Accueil'), ('REJET', 'Rejet'), ('PARTIEL', 'Accueil Partiel'), ('DESISTEMENT', 'Désistement'), ('IRRECEVABLE', 'Irrecevabilité')], max_length=15)),
                ('dispositif', models.TextField(help_text='Dispositif de la décision')),
                ('motifs', models.TextField(help_text='Motifs de la décision')),
                ('est_contradictoire', models.BooleanField(default=True)),
                ('est_executoire', models.BooleanField(default=False)),
                ('dossier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='decision', to='core.dossier')),
            ],
            options={
                'verbose_name': 'Décision',
                'verbose_name_plural': 'Décisions',
            },
        ),
        migrations.CreateModel(
            name='Attribution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('type_attribution', models.CharField(choices=[('GREFFIER', 'Greffier'), ('GREFFIER_CHEF', 'Greffier en Chef'), ('SECRETAIRE', 'Secrétaire'), ('HUISSIER', 'Huissier'), ('AUTRE', 'Autre')], max_length=20)),
                ('date_attribution', models.DateField(default=django.utils.timezone.now)),
                ('observations', models.TextField(blank=True)),
                ('attribue_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributions', to='core.dossier')),
            ],
            options={
                'verbose_name': 'Attribution',
                'verbose_name_plural': 'Attributions',
            },
        ),
        migrations.CreateModel(
            name='Frais',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('type_frais', models.CharField(choices=[('DROIT_GREFFE', 'Droit de Greffe'), ('TIMBRE_FISCAL', 'Timbre Fiscal'), ('CONSIGNATION', 'Consignation'), ('EXPERTISE', "Frais d'Expertise"), ('SIGNIFICATION', 'Frais de Signification'), ('AMENDE', 'Amende'), ('DOMMAGES_INTERETS', 'Dommages et Intérêts'), ('DEPENS', 'Dépens'), ('AUTRE', 'Autre')], max_length=20)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('montant_paye', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('date_echeance', models.DateField()),
                ('date_paiement', models.DateField(blank=True, null=True)),
                ('etat', models.CharField(choices=[('A_PAYER', 'À Payer'), ('PAYE', 'Payé'), ('PARTIEL', 'Partiellement Payé'), ('EN_RETARD', 'En Retard'), ('EXONERE', 'Exonéré')], default='A_PAYER', max_length=15)),
                ('mode_paiement', models.CharField(blank=True, max_length=50)),
                ('numero_recu', models.CharField(blank=True, max_length=100)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frais', to='core.dossier')),
            ],
            options={
                'verbose_name': 'Frais',
                'verbose_name_plural': 'Frais',
            },
        ),
        migrations.CreateModel(
            name='Magistrat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('numero_employe', models.CharField(max_length=50, unique=True)),
                ('type_magistrat', models.CharField(choices=[('SIEGE', 'Magistrat du Siège'), ('PARQUET', 'Magistrat du Parquet'), ('DETACHE', 'Magistrat Détaché')], max_length=10)),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('specialisation', models.CharField(blank=True, max_length=100)),
                ('date_nomination', models.DateField()),
                ('grade_siege', models.CharField(blank=True, choices=[('PRESIDENT_TJ', 'Président de Tribunal Judiciaire'), ('VICE_PRESIDENT', 'Vice-Président'), ('PRESIDENT_CHAMBRE', 'Président de Chambre'), ('JUGE', 'Juge'), ('JUGE_INSTRUCTION', "Juge d'Instruction"), ('JUGE_ENFANTS', 'Juge des Enfants'), ('JUGE_APPLICATION_PEINES', "Juge de l'Application des Peines")], max_length=30)),
                ('grade_parquet', models.CharField(blank=True, choices=[('PROCUREUR_GENERAL', 'Procureur Général'), ('AVOCAT_GENERAL', 'Avocat Général'), ('PROCUREUR_REPUBLIQUE', 'Procureur de la République'), ('VICE_PROCUREUR', 'Vice-Procureur'), ('SUBSTITUT', 'Substitut du Procureur')], max_length=30)),
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parquet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.parquet')),
                ('tribunal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.tribunal')),
            ],
            options={
                'verbose_name': 'Magistrat',
                'verbose_name_plural': 'Magistrats',
            },
        ),
        migrations.AddField(
            model_name='dossier',
            name='magistrat_parquet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dossiers_parquet', to='core.magistrat'),
        ),
        migrations.AddField(
            model_name='dossier',
            name='magistrat_siege',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dossiers_siege', to='core.magistrat'),
        ),
        migrations.CreateModel(
            name='Audience',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('type_audience', models.CharField(choices=[('PLAIDOIRIE', 'Plaidoirie'), ('MISE_EN_ETAT', 'Mise en État'), ('REFERE', 'Référé'), ('COMPARUTION', 'Comparution'), ('JUGEMENT', 'Jugement'), ('APPEL_CAUSE', 'Appel des Causes'), ('DELIBERE', 'Délibéré'), ('PRONONCE', 'Prononcé'), ('RENVOI', 'Renvoi')], max_length=20)),
                ('date_prevue', models.DateTimeField()),
                ('heure_debut_reelle', models.DateTimeField(blank=True, null=True)),
                ('heure_fin_reelle', models.DateTimeField(blank=True, null=True)),
                ('salle', models.CharField(max_length=50)),
                ('etat', models.CharField(choices=[('PROGRAMMEE', 'Programmée'), ('EN_COURS', 'En Cours'), ('TERMINEE', 'Terminée'), ('REPORTEE', 'Reportée'), ('ANNULEE', 'Annulée')], default='PROGRAMMEE', max_length=20)),
                ('observations', models.TextField(blank=True)),
                ('est_publique', models.BooleanField(default=True)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audiences', to='core.dossier')),
                ('magistrat', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.magistrat')),
            ],
            options={
                'verbose_name': 'Audience',
                'verbose_name_plural': 'Audiences',
            },
        ),
        migrations.AddField(
            model_name='dossier',
            name='nature_affaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.natureaffaire'),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('contenu', models.TextField()),
                ('est_publique', models.BooleanField(default=False)),
                ('auteur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='core.dossier')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.AddField(
            model_name='dossier',
            name='parquet',
            field=models.ForeignKey(blank=True, help_text='Parquet en charge pour les affaires pénales', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.parquet'),
        ),
        migrations.CreateModel(
            name='Classement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('motif_classement', models.CharField(choices=[('SANS_SUITE_CHARGES_INSUFFISANTES', 'Charges Insuffisantes'), ('SANS_SUITE_AUTEUR_INCONNU', 'Auteur Inconnu'), ('SANS_SUITE_INFRACTION_INEXISTANTE', 'Infraction Inexistante'), ('SANS_SUITE_AMNISTIE', 'Amnistie'), ('SANS_SUITE_PRESCRIPTION', 'Prescription'), ('SANS_SUITE_DECES', "Décès de l'Auteur"), ('SANS_SUITE_OPPORTUNITE', 'Inopportunité des Poursuites'), ('SANS_SUITE_TRANSACTION', 'Transaction'), ('SANS_SUITE_MEDIATION', 'Médiation Pénale'), ('SANS_SUITE_RAPPEL_LOI', 'Rappel à la Loi')], max_length=40)),
                ('date_classement', models.DateField(default=django.utils.timezone.now)),
                ('motivation', models.TextField(help_text='Motivation détaillée du classement')),
                ('notifie_parties', models.BooleanField(default=False)),
                ('date_notification', models.DateField(blank=True, null=True)),
                ('dossier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='classement', to='core.dossier')),
                ('magistrat_parquet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.magistrat')),
                ('parquet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.parquet')),
            ],
            options={
                'verbose_name': 'Classement',
                'verbose_name_plural': 'Classements',
            },
        ),
        migrations.CreateModel(
            name='PieceJointe',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('titre', models.CharField(max_length=200)),
                ('type_piece', models.CharField(choices=[('ASSIGNATION', 'Assignation'), ('CITATION', 'Citation'), ('REQUETE', 'Requête'), ('CONCLUSIONS', 'Conclusions'), ('MEMOIRE', 'Mémoire'), ('ORDONNANCE', 'Ordonnance'), ('JUGEMENT', 'Jugement'), ('ARRET', 'Arrêt'), ('PIECE_COMMUNICATION', 'Pièce de Communication'), ('EXPERTISE', 'Expertise'), ('ENQUETE', 'Enquête'), ('PV_CONCILIATION', 'PV de Conciliation'), ('TRANSACTION', 'Transaction'), ('APPEL', "Acte d'Appel"), ('POURVOI', 'Pourvoi'), ('AUTRE', 'Autre')], max_length=25)),
                ('fichier', models.FileField(upload_to='pieces_dossier/')),
                ('date_depot', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True)),
                ('est_confidentielle', models.BooleanField(default=False)),
                ('numero_piece', models.CharField(blank=True, max_length=20)),
                ('depose_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pieces_jointes', to='core.dossier')),
            ],
            options={
                'verbose_name': 'Pièce Jointe',
                'verbose_name_plural': 'Pièces Jointes',
            },
        ),
        migrations.CreateModel(
            name='ProcedureEnquete',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('type_enquete', models.CharField(choices=[('PRELIMINAIRE', 'Enquête Preliminaire'), ('FLAGRANCE', 'Enquête de Flagrance'), ('COMMISSION_ROGATOIRE', 'Commission Rogatoire'), ('INFORMATION_JUDICIAIRE', 'Information Judiciaire')], max_length=25)),
                ('officier_police_judiciaire', models.CharField(help_text='OPJ en charge', max_length=200)),
                ('service_enqueteur', models.CharField(help_text='Service de police/gendarmerie', max_length=200)),
                ('date_ouverture', models.DateField(default=django.utils.timezone.now)),
                ('date_cloture', models.DateField(blank=True, null=True)),
                ('etat_enquete', models.CharField(choices=[('EN_COURS', 'En Cours'), ('TERMINEE', 'Terminée'), ('SUSPENDUE', 'Suspendue'), ('CLASSEE', 'Classée')], default='EN_COURS', max_length=15)),
                ('synthese', models.TextField(blank=True, help_text="Synthèse de l'enquête")),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enquetes', to='core.dossier')),
                ('magistrat_parquet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.magistrat')),
                ('parquet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.parquet')),
            ],
            options={
                'verbose_name': "Procédure d'Enquête",
                'verbose_name_plural': "Procédures d'Enquête",
            },
        ),
        migrations.CreateModel(
            name='RequisitionParquet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('type_requisition', models.CharField(choices=[('POURSUITE', 'Réquisition de Poursuite'), ('NON_LIEU', 'Réquisition de Non-lieu'), ('CLASSEMENT', 'Réquisition de Classement'), ('PEINE', 'Réquisition de Peine'), ('MESURE_SURETE', 'Réquisition de Mesure de Sûreté'), ('MISE_EXAMEN', 'Réquisition de Mise en Examen'), ('MANDAT', 'Réquisition de Mandat'), ('PERQUISITION', 'Réquisition de Perquisition'), ('EXPERTISE', "Réquisition d'Expertise")], max_length=20)),
                ('contenu', models.TextField(help_text='Contenu de la réquisition')),
                ('date_requisition', models.DateField(default=django.utils.timezone.now)),
                ('est_suivie', models.BooleanField(default=False, help_text='Réquisition suivie par le juge')),
                ('observations', models.TextField(blank=True)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requisitions', to='core.dossier')),
                ('magistrat_parquet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.magistrat')),
                ('parquet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.parquet')),
            ],
            options={
                'verbose_name': 'Réquisition du Parquet',
                'verbose_name_plural': 'Réquisitions du Parquet',
            },
        ),
        migrations.AddField(
            model_name='parquet',
            name='tribunal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parquets', to='core.tribunal'),
        ),
        migrations.AddField(
            model_name='dossier',
            name='tribunal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tribunal'),
        ),
        migrations.CreateModel(
            name='VoieRecours',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('type_recours', models.CharField(choices=[('APPEL', 'Appel'), ('POURVOI_CASSATION', 'Pourvoi en Cassation'), ('OPPOSITION', 'Opposition'), ('TIERCE_OPPOSITION', 'Tierce Opposition'), ('RECOURS_REVISION', 'Recours en Révision')], max_length=20)),
                ('date_formation', models.DateField(default=django.utils.timezone.now)),
                ('etat', models.CharField(choices=[('FORME', 'Formé'), ('INSTRUIT', 'En Instruction'), ('ADMIS', 'Admis'), ('REJETE', 'Rejeté'), ('IRRECEVABLE', 'Irrecevable'), ('DESISTEMENT', 'Désistement')], default='FORME', max_length=15)),
                ('motifs', models.TextField(help_text='Motifs du recours')),
                ('dossier_origine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recours_formes', to='core.dossier')),
                ('dossier_recours', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='info_recours', to='core.dossier')),
                ('tribunal_recours', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tribunal')),
            ],
            options={
                'verbose_name': 'Voie de Recours',
                'verbose_name_plural': 'Voies de Recours',
            },
        ),
        migrations.CreateModel(
            name='PartieAuDossier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('qualite', models.CharField(choices=[('DEMANDEUR', 'Demandeur'), ('DEFENDEUR', 'Défendeur'), ('REQUERANT', 'Requérant'), ('INTIME', 'Intimé'), ('APPELANT', 'Appelant'), ('APPELE', 'Appelé'), ('TEMOIN', 'Témoin'), ('PARTIE_CIVILE', 'Partie Civile'), ('PREVENU', 'Prévenu'), ('ACCUSE', 'Accusé'), ('TIERS', 'Tiers'), ('MINISTERE_PUBLIC', 'Ministère Public'), ('PROCUREUR', 'Procureur'), ('PARTIE_POURSUIVANTE', 'Partie Poursuivante')], max_length=20)),
                ('date_constitution', models.DateField(default=django.utils.timezone.now)),
                ('observations', models.TextField(blank=True)),
                ('avocat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.avocat')),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parties_dossier', to='core.dossier')),
                ('partie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.partie')),
            ],
            options={
                'verbose_name': 'Partie au Dossier',
                'verbose_name_plural': 'Parties au Dossier',
                'unique_together': {('dossier', 'partie', 'qualite')},
            },
        ),
        migrations.CreateModel(
            name='Scelle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('numero_scelle', models.CharField(max_length=50)),
                ('type_scelle', models.CharField(choices=[('PIECE_CONVICTION', 'Pièce à Conviction'), ('DOCUMENT_SAISI', 'Document Saisi'), ('OBJET_SEQUESTRE', 'Objet Séquestré'), ('PREUVE_MATERIELLE', 'Preuve Matérielle'), ('AUTRE', 'Autre')], max_length=20)),
                ('description', models.TextField()),
                ('date_saisie', models.DateField()),
                ('saisi_par', models.CharField(max_length=100)),
                ('lieu_conservation', models.CharField(blank=True, max_length=200)),
                ('chaine_possession', models.TextField(blank=True, help_text='Chaîne de possession/custody')),
                ('est_verse_debats', models.BooleanField(default=False)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scelles', to='core.dossier')),
            ],
            options={
                'verbose_name': 'Scellé',
                'verbose_name_plural': 'Scellés',
                'unique_together': {('dossier', 'numero_scelle')},
            },
        ),
        migrations.CreateModel(
            name='AlternativePoursuites',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('type_alternative', models.CharField(choices=[('MEDIATION_PENALE', 'Médiation Pénale'), ('COMPOSITION_PENALE', 'Composition Pénale'), ('RAPPEL_LOI', 'Rappel à la Loi'), ('AVERTISSEMENT', 'Avertissement'), ('STAGE_CITOYENNETE', 'Stage de Citoyenneté'), ('TRAVAIL_INTERET_GENERAL', "Travail d'Intérêt Général"), ('REPARATION', 'Mesure de Réparation'), ('INJONCTION_THERAPEUTIQUE', 'Injonction Thérapeutique')], max_length=25)),
                ('date_proposition', models.DateField(default=django.utils.timezone.now)),
                ('date_acceptation', models.DateField(blank=True, null=True)),
                ('date_execution', models.DateField(blank=True, null=True)),
                ('etat', models.CharField(choices=[('PROPOSEE', 'Proposée'), ('ACCEPTEE', 'Acceptée'), ('REFUSEE', 'Refusée'), ('EN_COURS', "En Cours d'Exécution"), ('EXECUTEE', 'Exécutée'), ('NON_EXECUTEE', 'Non Exécutée')], default='PROPOSEE', max_length=15)),
                ('modalites', models.TextField(help_text="Modalités d'exécution")),
                ('montant', models.DecimalField(blank=True, decimal_places=2, help_text="Montant en cas d'amende de composition", max_digits=10, null=True)),
                ('date', models.DateField()),
                ('est_disponible', models.BooleanField(default=True)),
                ('observations', models.TextField(blank=True)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alternatives', to='core.dossier')),
                ('magistrat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alternatives_as_magistrat', to='core.magistrat')),
                ('magistrat_parquet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alternatives_as_parquet', to='core.magistrat')),
                ('parquet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.parquet')),
                ('tribunal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tribunal')),
            ],
            options={
                'verbose_name': 'Calendrier',
                'verbose_name_plural': 'Calendriers',
                'unique_together': {('date', 'tribunal', 'magistrat')},
            },
        ),
    ]
